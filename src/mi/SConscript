# -*- python -*-
# Copyright (C) 2003, Charles Wang.
# Author:  Charles Wang <charles@linux.net.cn>
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANT; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public LIcense for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, 59 Temple
# Place - Suite 330, Boston, MA 02111-1307, USA.

import glob
import os.path
import string

Import('*')

env = env.Clone()

TOPSRCDIR = os.path.abspath('.')
POTFILES = ['magic.installer.py', 'magicstep.py', 'magicpopup.py', 'xmlgtk.py', 'magic.logger.py'] \
           + glob.glob('modules/*.py') + glob.glob('operations/*.py') + \
           glob.glob('games/*.py')
POTXMLS = ['magic.installer.xml', 'magic.autopart.xml', 'magic.logger.xml'] + glob.glob('UIxml/*.xml') + \
          glob.glob('games/*.xml') + ['UIxml/takeactions.xml.cpinstmode']


env.Command('mipublic.py', 'm4.mipublic.py',
            'm4 -DFULL_WIDTH=$full_width -DFULL_HEIGHT=$full_height' + \
               ' -Dkernelver=$mikernelver -Disofn_fmt="$isofn_fmt"' + \
               ' -Ddistname="$distname" -Ddistver="$distver" -Ddistkernelver="$distkernelver"' + \
               ' -Dbootcdfn="$bootiso_fn" -Ddolog="$dolog" -Duseudev="$useudev"' + \
               ' -Dhotfixdir="$hotfixdir"' + \
               ' -DTEXTDOMAIN="$textdomain" -DBINDIR="$root_bindir" -DDATADIR="$root_datadir"' + \
               ' -DPKGTYPE="$pkgtype"'+ \
               ' -DLIBDIR="$root_libdir" -DMODULEDIR="$root_moduledir" -DOPERATIONDIR="$root_operationdir" '
               ' < $SOURCES > $TARGET')

def xmlesc(s):
    s = string.replace(s, "&", "&amp;")
    s = string.replace(s, "<", "&lt;")
    s = string.replace(s, ">", "&gt;")
    return  s

def gen_magic_autopart_xml(target, source, env):
    f = file(str(target[0]), 'w')
    # auto partition profile
    f.write("""<?xml version="1.0"?>
<!-- Copyright (C) 2007, Levin Du <zsdjw@21cn.com> -->
<!-- Author:  Levin Du -->
<root>
  <autopart>
""")
    for (i, profile) in enumerate(mi_config.autopart_profile):
        partlist = mi_config.autopart_profile[profile]
        f.write("    <%s desc=\"((%s))\">\n" % (profile, xmlesc(partlist[0])))
        for part in partlist[1:]:
            f.write("      <part>\n")
            f.write("""        <mountpoint>%s</mountpoint>
        <filesystem>%s</filesystem>
        <size>%s</size>
""" % (xmlesc(part[0]), xmlesc(part[1]), xmlesc(part[2])))
            f.write("      </part>\n")
        f.write("    </%s>\n" % profile)
    f.write("  </autopart>\n")
    f.write("</root>\n")
    f.close()

env.Command('magic.autopart.xml', [env.Value(mi_config.autopart_profile)],
            gen_magic_autopart_xml)


bin_programs = ['mi.toplevel',        # MagicInstaller Toplevel Controller.
                'mi.runserver'	  # execute by toplevel, will run all servers of MI.
                ]

for bp in bin_programs:
    env['_bp'] = bp
    depInstallAs(env, 'root_src', '$destdir$root_bindir/${_bp}', '${_bp}.sh')
    AddPostAction('$destdir$root_bindir/${_bp}',
                  'chmod +x $destdir$root_bindir/${_bp}')
del env['_bp']

pydatas = ['magic.values.xml', ]
depInstall(env, 'root_src', '$destdir$root_datadir', pydatas)

def gen_magic_values_m4defs(target, source, env):

    f = file(str(target[0]), 'w')
    f.write("changequote(/--, --/)dnl\n")
    f.write("define(vender_list, /--\n")

    f.write("--/)dnl\n")
    f.write("define(mouse_list, /--\n")

    f.write("--/)dnl\n")
    f.write("define(card_list, /--\n")

    f.write("--/)dnl\n")

    f.close()

env.Command('magic.values.m4defs', '', gen_magic_values_m4defs)

env.Command('magic.values.xml', ['magic.values.m4defs',
                                 'm4.magic.values.xml'],
            'm4 $SOURCES > $TARGET')
# Fill distname in m4.magic.values.xml at run time.
#            'm4 -Ddistname="%s" -Ddistver="%s" $SOURCES > $TARGET' % \
#            (mi_config.distname, mi_config.distver))
#env.Depends('magic.values.xml', [env.Value(mi_config.distname),
#                                 env.Value(mi_config.distver)])




#for pym in pymodules:
#    env.PYCBuilder(pym, pym[:-1])
def depInstall_pylibs(pymodules):
    depInstall(env, 'root_src', '$destdir$root_libdir', pymodules)
    pass

def depInstall_MIdata(files):
    pass

Export('depInstall_pylibs', 'depInstall_MIdata')

depInstall_pylibs(['mipublic.py', #'xmlgtk.py',
             'getdev.py', ] #'magictaskman.py']
             )

Export('TOPSRCDIR', 'POTFILES', 'POTXMLS') # FIXME
SConscript('po/SConscript')

SConscript('server/SConscript')
SConscript('client/SConscript')

SConscript('UIxml/SConscript')
SConscript('helptext/SConscript')
SConscript('images/SConscript')
SConscript('games/SConscript')

